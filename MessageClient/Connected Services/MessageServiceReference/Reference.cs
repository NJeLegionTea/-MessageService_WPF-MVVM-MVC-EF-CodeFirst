//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MessageClient.MessageServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/MessageService.SupportClass")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MessageClient.MessageServiceReference.Employee[] DialogWithField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((this.DepartmentField.Equals(value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MessageClient.MessageServiceReference.Employee[] DialogWith {
            get {
                return this.DialogWithField;
            }
            set {
                if ((object.ReferenceEquals(this.DialogWithField, value) != true)) {
                    this.DialogWithField = value;
                    this.RaisePropertyChanged("DialogWith");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/MessageService.SupportClass")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MessageClient.MessageServiceReference.Employee RecipientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MessageClient.MessageServiceReference.Employee SenderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contents {
            get {
                return this.ContentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentsField, value) != true)) {
                    this.ContentsField = value;
                    this.RaisePropertyChanged("Contents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((this.MessageIdField.Equals(value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MessageClient.MessageServiceReference.Employee Recipient {
            get {
                return this.RecipientField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientField, value) != true)) {
                    this.RecipientField = value;
                    this.RaisePropertyChanged("Recipient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MessageClient.MessageServiceReference.Employee Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessageServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/VerificationAccount", ReplyAction="http://tempuri.org/IService/VerificationAccountResponse")]
        MessageClient.MessageServiceReference.Employee VerificationAccount(MessageClient.MessageServiceReference.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/VerificationAccount", ReplyAction="http://tempuri.org/IService/VerificationAccountResponse")]
        System.Threading.Tasks.Task<MessageClient.MessageServiceReference.Employee> VerificationAccountAsync(MessageClient.MessageServiceReference.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Registration", ReplyAction="http://tempuri.org/IService/RegistrationResponse")]
        MessageClient.MessageServiceReference.Employee Registration(MessageClient.MessageServiceReference.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Registration", ReplyAction="http://tempuri.org/IService/RegistrationResponse")]
        System.Threading.Tasks.Task<MessageClient.MessageServiceReference.Employee> RegistrationAsync(MessageClient.MessageServiceReference.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SearchDuplicateLogin", ReplyAction="http://tempuri.org/IService/SearchDuplicateLoginResponse")]
        bool SearchDuplicateLogin(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SearchDuplicateLogin", ReplyAction="http://tempuri.org/IService/SearchDuplicateLoginResponse")]
        System.Threading.Tasks.Task<bool> SearchDuplicateLoginAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMessage", ReplyAction="http://tempuri.org/IService/GetMessageResponse")]
        MessageClient.MessageServiceReference.Message[] GetMessage(int currentUserId, int selectedUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMessage", ReplyAction="http://tempuri.org/IService/GetMessageResponse")]
        System.Threading.Tasks.Task<MessageClient.MessageServiceReference.Message[]> GetMessageAsync(int currentUserId, int selectedUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewMessage", ReplyAction="http://tempuri.org/IService/AddNewMessageResponse")]
        bool AddNewMessage(MessageClient.MessageServiceReference.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewMessage", ReplyAction="http://tempuri.org/IService/AddNewMessageResponse")]
        System.Threading.Tasks.Task<bool> AddNewMessageAsync(MessageClient.MessageServiceReference.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SearchEmployee", ReplyAction="http://tempuri.org/IService/SearchEmployeeResponse")]
        MessageClient.MessageServiceReference.Employee SearchEmployee(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SearchEmployee", ReplyAction="http://tempuri.org/IService/SearchEmployeeResponse")]
        System.Threading.Tasks.Task<MessageClient.MessageServiceReference.Employee> SearchEmployeeAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetContactList", ReplyAction="http://tempuri.org/IService/GetContactListResponse")]
        MessageClient.MessageServiceReference.Employee[] GetContactList(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetContactList", ReplyAction="http://tempuri.org/IService/GetContactListResponse")]
        System.Threading.Tasks.Task<MessageClient.MessageServiceReference.Employee[]> GetContactListAsync(int UserId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : MessageClient.MessageServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<MessageClient.MessageServiceReference.IService>, MessageClient.MessageServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MessageClient.MessageServiceReference.Employee VerificationAccount(MessageClient.MessageServiceReference.Employee employee) {
            return base.Channel.VerificationAccount(employee);
        }
        
        public System.Threading.Tasks.Task<MessageClient.MessageServiceReference.Employee> VerificationAccountAsync(MessageClient.MessageServiceReference.Employee employee) {
            return base.Channel.VerificationAccountAsync(employee);
        }
        
        public MessageClient.MessageServiceReference.Employee Registration(MessageClient.MessageServiceReference.Employee employee) {
            return base.Channel.Registration(employee);
        }
        
        public System.Threading.Tasks.Task<MessageClient.MessageServiceReference.Employee> RegistrationAsync(MessageClient.MessageServiceReference.Employee employee) {
            return base.Channel.RegistrationAsync(employee);
        }
        
        public bool SearchDuplicateLogin(string login) {
            return base.Channel.SearchDuplicateLogin(login);
        }
        
        public System.Threading.Tasks.Task<bool> SearchDuplicateLoginAsync(string login) {
            return base.Channel.SearchDuplicateLoginAsync(login);
        }
        
        public MessageClient.MessageServiceReference.Message[] GetMessage(int currentUserId, int selectedUserId) {
            return base.Channel.GetMessage(currentUserId, selectedUserId);
        }
        
        public System.Threading.Tasks.Task<MessageClient.MessageServiceReference.Message[]> GetMessageAsync(int currentUserId, int selectedUserId) {
            return base.Channel.GetMessageAsync(currentUserId, selectedUserId);
        }
        
        public bool AddNewMessage(MessageClient.MessageServiceReference.Message message) {
            return base.Channel.AddNewMessage(message);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewMessageAsync(MessageClient.MessageServiceReference.Message message) {
            return base.Channel.AddNewMessageAsync(message);
        }
        
        public MessageClient.MessageServiceReference.Employee SearchEmployee(string login) {
            return base.Channel.SearchEmployee(login);
        }
        
        public System.Threading.Tasks.Task<MessageClient.MessageServiceReference.Employee> SearchEmployeeAsync(string login) {
            return base.Channel.SearchEmployeeAsync(login);
        }
        
        public MessageClient.MessageServiceReference.Employee[] GetContactList(int UserId) {
            return base.Channel.GetContactList(UserId);
        }
        
        public System.Threading.Tasks.Task<MessageClient.MessageServiceReference.Employee[]> GetContactListAsync(int UserId) {
            return base.Channel.GetContactListAsync(UserId);
        }
    }
}
